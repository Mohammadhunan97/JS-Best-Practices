1. Declare almost all variables on the top, but not necessarily defined on top (the only occasion when this is not true is variables declared
inside bracket scope for specific functionality, this is why we use let instead of var): 

        var a, b; var c = [];
        var foo = 'some random string';
        
        f somefunct(n) //gives a and b a val
        f otherfunct(n) //pushes those vals into c 
        
This will give no errors and it is clear what variables due.      

2. Write named functions not anonymous functions. This is because we want hoisting capabilities, we NEVER want to rely on hoisting, but if a 
more junior developer than us (or just someone who doesn't notice where the function is defined) inherits our code, we do not want them
getting errors and not realizing. This is also so we can later add functions like 'getRand' (see mkrJS repository) to the bottom of our 
code and use them, without negatively effecting the code above it.

3. Functions which return true or false values, should be named with a question mark at the end as such:

        function loggedIn?(){
        }
   This convention is for readability as well as ease of understanding of codebase for other devs     
        


4. Use const by default, use let for variables that you know you will have to change later. This is for clarity purposes. For instance,
        const header = document.getElementById('header'); //value won't change so we declare it as a const
        let amt = 80; //value that might change
        amt = amt += 12
        header.innerText = amt;
99% of the time don't use var because it has function scope and most of the time we would rather have bracket scope. 
